{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_02032710",
        "filename": "bgp/topology-provider/src/main/java/org/opendaylight/bgpcep/bgp/topology/provider/AbstractTopologyBuilder.java",
        "patchSetId": 16
      },
      "lineNbr": 181,
      "author": {
        "id": 866
      },
      "writtenOn": "2016-08-03T12:50:27Z",
      "side": 1,
      "message": "Could we call transaction #submit immediatelly and then return?",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 181,
        "endChar": 45
      },
      "revId": "331a506eaa3ab120ceea7e5b7f7c2f55ed1c9880",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_64794893",
        "filename": "bgp/topology-provider/src/main/java/org/opendaylight/bgpcep/bgp/topology/provider/AbstractTopologyBuilder.java",
        "patchSetId": 16
      },
      "lineNbr": 181,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-08-03T15:52:51Z",
      "side": 1,
      "message": "Guys, calling transaction.cancel() is the only real option here. The only errors which can show up here are logic errors from this code (and plugins), hence those need to be fixed. An approach to allow PingPong to cancel transactions has been discussed -- and a cut at that is at https://git.opendaylight.org/gerrit/43058. The important part is to re-start the transaction chain here.",
      "parentUuid": "7a6b29fe_02032710",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 181,
        "endChar": 45
      },
      "revId": "331a506eaa3ab120ceea7e5b7f7c2f55ed1c9880",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_4e03820f",
        "filename": "bgp/topology-provider/src/main/java/org/opendaylight/bgpcep/bgp/topology/provider/AbstractTopologyBuilder.java",
        "patchSetId": 16
      },
      "lineNbr": 181,
      "author": {
        "id": 2195
      },
      "writtenOn": "2016-08-04T19:12:46Z",
      "side": 1,
      "message": "Could we have the transaction.cancel() implemented here later?  Right now a few other BGP tickets are depending on this patch.  We can push a second patch with transaction.cancel() later. If we can merge this patch now, we can move on with other tickets first when the yangtools patch is being verified.",
      "parentUuid": "7a6b29fe_64794893",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 181,
        "endChar": 45
      },
      "revId": "331a506eaa3ab120ceea7e5b7f7c2f55ed1c9880",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_222f43a3",
        "filename": "bgp/topology-provider/src/main/java/org/opendaylight/bgpcep/bgp/topology/provider/AbstractTopologyBuilder.java",
        "patchSetId": 16
      },
      "lineNbr": 332,
      "author": {
        "id": 866
      },
      "writtenOn": "2016-08-03T12:50:27Z",
      "side": 1,
      "message": "We can check if the onTransactionChainFailed was invoked on current transaction (equals), if not - ignore the failure, if yes - restart listener.",
      "range": {
        "startLine": 327,
        "startChar": 0,
        "endLine": 332,
        "endChar": 82
      },
      "revId": "331a506eaa3ab120ceea7e5b7f7c2f55ed1c9880",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_0a897dca",
        "filename": "bgp/topology-provider/src/main/java/org/opendaylight/bgpcep/bgp/topology/provider/AbstractTopologyBuilder.java",
        "patchSetId": 16
      },
      "lineNbr": 332,
      "author": {
        "id": 2195
      },
      "writtenOn": "2016-08-03T19:03:23Z",
      "side": 1,
      "message": "The main problem is every time we restart the listener, the whole topology get rebuilt.  It is a huge overhead when the topology is large.  If we immediately restart of the listener, the topology can become unstable if the error get triggered frequently due to any reason.  I can add that check but it won\u0027t help solving the first problem.",
      "parentUuid": "7a6b29fe_222f43a3",
      "range": {
        "startLine": 327,
        "startChar": 0,
        "endLine": 332,
        "endChar": 82
      },
      "revId": "331a506eaa3ab120ceea7e5b7f7c2f55ed1c9880",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}