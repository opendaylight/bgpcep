{
  "comments": [
    {
      "key": {
        "uuid": "b8289f82_e3492363",
        "filename": "pcep/api/src/main/java/org/opendaylight/protocol/pcep/TerminationReason.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 7231
      },
      "writtenOn": "2019-11-27T17:49:15Z",
      "side": 1,
      "message": "Is it possible to replace \u0027toJava()\u0027 method by \u0027shortValue()\u0027 method ? It is difficult to know what toJava() return if you not use appropriate IDE or look to Uint8 class",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 34,
        "endChar": 9
      },
      "revId": "bfa14c67c02b14a127ea483a68444f840b24b791",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83c31957_e49efd66",
        "filename": "pcep/api/src/main/java/org/opendaylight/protocol/pcep/TerminationReason.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 649
      },
      "writtenOn": "2019-12-09T11:09:49Z",
      "side": 1,
      "message": "Well, honestly, coding Java without an IDE is quite inefficient.\n\nOn the technical point, though, toJava() is safer in face of refactors, for example if the base type is being changed. It is a widening conversion, so Uint8.toJava() has different type than Uint16.toJava() while they have the same semantics. That is in stark contrast to shortValue(), which has different semantics between Uint8 and Uint16. while retaining the same type.",
      "parentUuid": "b8289f82_e3492363",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 34,
        "endChar": 9
      },
      "revId": "bfa14c67c02b14a127ea483a68444f840b24b791",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab35009_59c67102",
        "filename": "pcep/api/src/main/java/org/opendaylight/protocol/pcep/TerminationReason.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 6731
      },
      "writtenOn": "2019-12-10T14:19:49Z",
      "side": 1,
      "message": "I guess Olivier\u0027s point concerns the few people who develop with another IDE than eclipse(-oomph). Most of them doesn\u0027t come with the appropriate settings for ODL, for example geany.\nSince yangtools is another project than bgpcep, those IDE out-of-the-box configurations cannot retrieve the appropriate descriptions of these methods and they often proposes no option to retrieve it easily or remotely.\n\nWell, for people who develop java without IDE, they are probably even fewer (and very upset by the slowness of eclipse).",
      "parentUuid": "83c31957_e49efd66",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 34,
        "endChar": 9
      },
      "revId": "bfa14c67c02b14a127ea483a68444f840b24b791",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e331274e_1c289a63",
        "filename": "pcep/api/src/main/java/org/opendaylight/protocol/pcep/TerminationReason.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 649
      },
      "writtenOn": "2019-12-10T23:15:00Z",
      "side": 1,
      "message": "That\u0027s interesting. All of yangtools (including -sources.jar and -javadoc.jar) is on Maven Central, so this should Just Work(tm) these days.\n\nI am fine not rushing this in, nor have made my mind up on what to do -- so let\u0027s get the IDE sorted first :)",
      "parentUuid": "3ab35009_59c67102",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 34,
        "endChar": 9
      },
      "revId": "bfa14c67c02b14a127ea483a68444f840b24b791",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d463185_623743e9",
        "filename": "pcep/api/src/main/java/org/opendaylight/protocol/pcep/TerminationReason.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 6731
      },
      "writtenOn": "2020-01-31T14:35:35Z",
      "side": 1,
      "message": "This change is starting to get older and older.\nIf this still makes sense to merge it, please go ahead. I\u0027ve talked with Olivier.\norg.opendaylight.yangtools.yang.common.UintXX and toJava() are anyway described in the Magnesium migration guide. So we can assume everybody knows what is their purpose.",
      "parentUuid": "e331274e_1c289a63",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 34,
        "endChar": 9
      },
      "revId": "bfa14c67c02b14a127ea483a68444f840b24b791",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99996356_098e40cc",
        "filename": "pcep/api/src/main/java/org/opendaylight/protocol/pcep/TerminationReason.java",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 7231
      },
      "writtenOn": "2019-11-27T17:49:15Z",
      "side": 1,
      "message": "getUintValue() would be better if named getValue() or getUint8Value()",
      "revId": "bfa14c67c02b14a127ea483a68444f840b24b791",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "871eaf56_621c34e3",
        "filename": "pcep/api/src/main/java/org/opendaylight/protocol/pcep/TerminationReason.java",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 7231
      },
      "writtenOn": "2019-11-27T17:49:15Z",
      "side": 1,
      "message": "same as above",
      "revId": "bfa14c67c02b14a127ea483a68444f840b24b791",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": true
    }
  ]
}