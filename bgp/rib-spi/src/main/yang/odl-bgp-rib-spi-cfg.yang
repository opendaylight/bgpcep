// vi: set smarttab et sw=4 tabstop=4:
module odl-bgp-rib-spi-cfg {
    yang-version 1;
    namespace "urn:opendaylight:params:xml:ns:yang:controller:bgp:rib:spi";
    prefix "bgpribspi";

    import config { prefix config; revision-date 2013-04-05; }
    import netty { prefix netty; revision-date 2013-11-19; }

    organization "Cisco Systems, Inc.";

    contact "Robert Varga <rovarga@cisco.com>";

    description
        "This module contains the base YANG definitions for
         BGP listener service.

        Copyright (c)2013 Cisco Systems, Inc. All rights reserved.;

        This program and the accompanying materials are made available
        under the terms of the Eclipse Public License v1.0 which
        accompanies this distribution, and is available at
        http://www.eclipse.org/legal/epl-v10.html";

    revision "2013-11-15" {
        description
            "Initial revision";
    }

    identity consumer-extensions {
        description
            "Service representing a BGP RIB extension registry. Extension
            consumers have this service injected.";

        base "config:service-type";
        config:java-class "org.opendaylight.protocol.bgp.rib.spi.RIBExtensionConsumerContext";
    }

    identity extensions {
        description
            "Service representing a BGP RIB extension registry. Extension
            providers have this service injected for registration.";

        base "consumer-extensions";
        config:java-class "org.opendaylight.protocol.bgp.rib.spi.RIBExtensionProviderContext";
    }

    identity extension {
        description
            "Service representing a BGP RIB extension.";

        base "config:service-type";
        config:java-class "org.opendaylight.protocol.bgp.rib.spi.RIBExtensionProviderActivator";
    }

    identity bgp-rib-extensions-impl {
        base config:module-type;
        config:provided-service extensions;
        config:java-name-prefix RIBExtensionsImpl;
    }

    augment "/config:modules/config:module/config:configuration" {
        case bgp-rib-extensions-impl {
            when "/config:modules/config:module/config:type = 'bgp-rib-extensions-impl'";

            list extension {
                uses config:service-ref {
                    refine type {
                        mandatory true;
                        config:required-identity extension;
                    }
                }
            }
        }
    }

    identity reconnect-strategy-factory {
        description
            "Service representing a reconnect strategy factory.";

        base "config:service-type";
        config:java-class "org.opendaylight.protocol.bgp.rib.protocol.ReconnectStrategyFactory";
    }

    identity timed-reconnect-strategy-factory {
        base config:module-type;
        config:provided-service reconnect-strategy-factory;
        config:java-name-prefix TimedReconnectStrategyFactory;
    }

    augment "/config:modules/config:module/config:configuration" {
        case timed-reconnect-strategy-factory {
            when "/config:modules/config:module/config:type = 'timed-reconnect-strategy-factory'";

            leaf deadline {
                type int64;
                units "epoch nanoseconds";
            }

            leaf max-attempts {
                mandatory true;
                type int64;
            }

            leaf max-sleep {
                mandatory true;
                type int64;
                units "milliseconds";
            }

            leaf min-sleep {
                mandatory true;
                type int64;
                units "milliseconds";
            }

            leaf sleep-factor {
                mandatory true;
                type decimal64 {
                    fraction-digits 2;
                }
            }

            leaf connect-time {
                mandatory true;
                type int32;
                units "milliseconds";
            }

            container timed-reconnect-executor {
                uses config:service-ref {
                    refine type {
                        mandatory true;
                        config:required-identity netty:netty-event-executor;
                    }
                }
            }
        }
    }
}

