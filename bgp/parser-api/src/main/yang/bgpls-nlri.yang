module bgpls-nlri {
	yang-version 1;
	namespace "urn:opendaylight:params:xml:ns:yang:bgpls";
	prefix "nlri";

	import  ietf-inet-types { prefix inet;}

	organization "Cisco Systems, Inc.";
	contact "Dana Kutenicsova <dkutenic@cisco.com>";

	description
		"This module contains the base data model of a BGP-LS Update message.
		It rolls up the definitions contained in RFC4271
		and draft-ietf-idr-ls-distribution-03.

		Copyright (c)2013 Cisco Systems, Inc. All rights reserved.

		This program and the accompanying materials are made available
		under the terms of the Eclipse Public License v1.0 which
		accompanies this distribution, and is available at
		http://www.eclipse.org/legal/epl-v10.html";

	revision "2013-08-12" {
		description
			"Initial revision.";
		reference "RFC4271";
	}

	typedef ospf-route-type {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.3.1";
		type enumeration {
			enum intra-area {
				value 1;
			}
			enum inter-area {
				value 2;
			}
			enum external1 {
				value 3;
			}
			enum external2 {
				value 4;
			}
			enum nssa1 {
				value 5;
			}
			enum nssa2 {
				value 6;
			}
		}
	}

	typedef link-protection-type {
		reference "http://tools.ietf.org/html/rfc5307#section-1.2";
		type enumeration {
			enum extra-traffix {
				value 1;
			}
			enum unprotected {
				value 2;
			}
			enum shared {
				value 4;
			}
			enum dedicated-1to1 {
				value 8;
			}
			enum dedicated-1plus1 {
				value 16;
			}
			enum enhanced {
				value 32;
			}
		}
	}

	typedef protocol-id {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2";
		type enumeration {
			enum unknown {
				value 0;
			}
			enum isis-level1 {
				value 1;
			}
			enum isis-level2 {
				value 2;
			}
			enum ospf {
				value 3;
			}
			enum direct {
				value 4;
			}
			enum static {
				value 5;
			}
		}
	}

	typedef area-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		type binary {
			length "4";
		}
	}

	typedef isis-area-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.1.2";
		type binary {
			length "20";
		}
	}

	typedef domain-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		type binary {
			length "4";
		}
	}

	// concepts
	typedef iso-system-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		type binary {
			length "6";
		}
	}

	typedef ipv4-interface-identifier {
		reference "http://tools.ietf.org/html/rfc5305#section-3.2";
		type inet:ipv4-address;
	}

	typedef ipv4-router-identifier {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.1.4";
		type inet:ipv4-address;
	}

	typedef ipv6-interface-identifier {
		reference "http://tools.ietf.org/html/rfc6119#section-4.2";
		type inet:ipv6-address;
	}

	typedef ipv6-router-identifier {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.1.4";
		type inet:ipv6-address;
	}

	typedef ospf-interface-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		type binary {
			length "4";
		}
	}

	typedef unnumbered-link-identifier {
		reference "http://tools.ietf.org/html/rfc4202#section-2.1";
		type uint32;
	}

	typedef shared-risk-link-group {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.2.4";
		type uint32;
	}

	// concepts
	typedef metric {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.3.4";
		type uint32;
	}

	// concepts
	typedef igp-metric {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.2.3";
		type uint32 {
			range "1..16777215";
		}
	}

	typedef route-tag {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.3.2";
		type binary {
			length "4";
		}
	}

	typedef extended-route-tag {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.3.3";
		type binary {
			length "8";
		}
	}

	// FIXME: to double
	// concepts
	typedef bandwidth {
		type decimal64 {
			fraction-digits 2;
		}
	}

	grouping unreserved-bandwidth {
		leaf priority {
			type uint8 {
				range "0..7";
			}
		}
		leaf bandwidth {
			type bandwidth;
		}
	}

	typedef administrative-group {
		type uint32;
	}

	typedef node-flag-bits {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.1.1";
		type bits {
			bit overload {
				position 0;
			}
			bit attached {
				position 1;
			}
			bit external {
				position 2;
			}
			bit abr {
				position 3;
			}
		}
	}

	// linkstate
	typedef mpls-protocol-mask {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.2.2";
		type bits {
			bit ldp {
				position 0;
			}
			bit rsvpte {
				position 1;
			}
		}
	}

	typedef topology-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.5";
		type uint16 {
			range "0..4095";
		}
	}

	grouping isis-router-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		leaf iso-system-id {
			type iso-system-identifier;
			mandatory true;
		}
	}

	grouping isis-lan-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		container is-is-router-identifier {
			uses isis-router-identifier;
		}
		leaf psn {
			type uint8 {
				range "1..255";
			}
			mandatory true;
		}
	}

	grouping ospf-router-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		leaf ospf-router-id {
			type binary {
				length "4";
			}
			mandatory true;
		}
	}

	grouping ospf-v2-lan-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		uses ospf-router-identifier;
		leaf ipv4-address {
			type ipv4-interface-identifier;
			mandatory true;
		}
	}

	grouping ospf-v3-lan-identifier {
		reference "https://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2.1.4";
		uses ospf-router-identifier;
		leaf lan-interface {
			type ospf-interface-identifier;
			mandatory true;
		}
	}

	grouping node-identifier {
		leaf as-number {
			type inet:as-number;
			mandatory true;
		}
		leaf area-id {
			type area-identifier;
		}
		leaf domain-id {
			type domain-identifier;
			mandatory true;
		}
		choice router-identifier {
			case isis-node {
				container isis-node {
					uses isis-router-identifier;
				}
			}

			case isis-pseudonode {
				container isis-pseudonode {
					uses isis-lan-identifier;
				}
			}

			case ospf-node {
				container ospf-node {
					uses ospf-router-identifier;
				}
			}

			case ospf-pseudonode {
				container ospf-pseudonode {
					uses ospf-v3-lan-identifier;
				}
			}
		}
	}

	grouping link-anchor {
		container node-identifier {
			uses node-identifier;
		}
		choice interface-identifier {
			case ipv4-iface-id {
				leaf ipv4-iface-id {
					type ipv4-interface-identifier;
				}
			}

			case ipv6-iface-id {
				leaf ipv6-iface-id {
					type ipv6-interface-identifier;
				}
			}

			case ospf-iface-id {
				leaf ospf-iface-id {
					type ospf-interface-identifier;
				}
			}

			case unnum-iface-id {
				leaf unnum-iface-id {
					type unnumbered-link-identifier;
				}
			}
		}
	}

	grouping link-identifier {
		leaf topology-identifier {
			type topology-identifier;
		}
		container link-anchor {
			uses link-anchor;
		}
	}

	grouping prefix-identifier {
		container node-identifier {
			uses node-identifier;
		}
		leaf prefix {
			type inet:ip-prefix;
		}
	}

	grouping ospf-prefix-identifier {
		uses prefix-identifier;
		leaf ospf-route-t {
			type ospf-route-type;
		}
	}

	grouping network-node-state {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.1";
		leaf topology-identifier {
			type topology-identifier;
		}
		leaf node-flags {
			type node-flag-bits;
		}
		leaf-list isis-area-id {
			type isis-area-identifier;
		}
		leaf dynamic-hostname {
			type string;
		}
		leaf ipv4-router-id {
			type ipv4-router-identifier;
		}
		leaf ipv6-router-id {
			type ipv6-router-identifier;
		}
	}

	grouping network-link-state {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.2";
		leaf local-ipv4-router-id {
			type ipv4-router-identifier;
		}
		leaf local-ipv6-router-id {
			type ipv6-router-identifier;
		}
		leaf remote-ipv4-router-id {
			type ipv4-router-identifier;
		}
		leaf remote-ipv6-router-id {
			type ipv6-router-identifier;
		}
		leaf mpls-protocol {
			type mpls-protocol-mask;
		}
		leaf metric {
			type igp-metric;
		}
		leaf-list shared-risk-link-groups {
			type shared-risk-link-group;
		}
		leaf link-name {
			type string;
		}
		leaf max-link-bandwidth {
			type bandwidth;
		}
		leaf max-reservable-bandwidth {
			type bandwidth;
		}
		list unreserved-bandwidth {
			key "priority";
			uses unreserved-bandwidth;
		}
		leaf link-protection {
			type link-protection-type;
		}
		leaf admin-group {
			type administrative-group;
		}
	}

	grouping network-prefix-state {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.3.3";
		leaf prefix-metric {
			type metric;
		}
		leaf-list route-tags {
			type route-tag;
		}
	}

	grouping ospf-network-prefix-state {
		uses network-prefix-state;
		leaf ospf-forwarding-address {
			type inet:ip-address;
		}
	}

	grouping is-is-network-prefix-state {
		uses network-prefix-state;
		leaf up-down {
			type bits {
				bit up-down {
					position 0;
				}
			}
		}
		leaf-list extended-route-tags {
			type extended-route-tag;
		}
	}

	grouping network-node {
		container network-node-state {
			uses network-node-state;
		}
	}

	grouping network-link {
		container network-link-state {
			uses network-link-state;
		}
	}

	grouping network-prefix {
		container network-prefix-state {
			uses network-prefix-state;
		}
	}

	notification bgpls-pdu {
		reference "http://tools.ietf.org/html/draft-ietf-idr-ls-distribution-03#section-3.2";
		leaf route-distinguisher {
			type uint64;
		}
		leaf protocol {
			type protocol-id;
			mandatory true;
		}
		leaf identifier {
			type uint64;
			mandatory true;
		}
		choice objects {
			case nodes {
				list nodes {
					uses network-node;
				}
			}
			case links {
				list links {
					uses network-link;
				}
			}
			case prefixes {
				list prefixes {
					uses network-prefix;
				}
			}
		}
	}
}
