{
  "comments": [
    {
      "key": {
        "uuid": "1a622d24_44f21cd3",
        "filename": "bgp/openconfig-state-spi/src/main/java/org/opendaylight/protocol/bgp/state/spi/counters/BigIntegerCounter.java",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-12-14T17:16:45Z",
      "side": 1,
      "message": "spi, missing javadocs. Really good javadocs, explaining why are we doing things the way we do them.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 11
      },
      "revId": "bf6a4fbd2607ba50b3396a0bada8588c812016f3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a622d24_04e824e1",
        "filename": "bgp/openconfig-state-spi/src/main/java/org/opendaylight/protocol/bgp/state/spi/counters/BigIntegerCounter.java",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-12-14T17:16:45Z",
      "side": 1,
      "message": "This is slow and ugly. First of all, what is the issue with overflows -- at that the counter will simply wrap around, which is completely fine from what I understand.\n\nDo callers really need the new value? If so, why and if there is even a single caller which does not need the value, we have to have a dedicated method, which will be *fast*.\n\nInstantiating BigIntegers and performing operations on them is slow as hell -- just study the code to understand what is going on.",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 36
      },
      "revId": "bf6a4fbd2607ba50b3396a0bada8588c812016f3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}