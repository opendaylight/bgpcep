{
  "comments": [
    {
      "key": {
        "uuid": "fa57193c_333ae3cd",
        "filename": "bgp/rib-impl/src/main/java/org/opendaylight/protocol/bgp/rib/impl/BGPByteToMessageDecoder.java",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-05-03T08:54:42Z",
      "side": 1,
      "message": "This is fishy. Decoders are netty handlers, which are guaranteed to be invoked from a single thread, hence no need to update. Furthermore ...",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 22
      },
      "revId": "c3ddbcaab90233107b45f96aaee87f84aab4247d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa57193c_1337dfe4",
        "filename": "bgp/rib-impl/src/main/java/org/opendaylight/protocol/bgp/rib/impl/BGPByteToMessageDecoder.java",
        "patchSetId": 12
      },
      "lineNbr": 40,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-05-03T08:54:42Z",
      "side": 1,
      "message": "this is equivalent to:\n\nsynchronized (BGPByteToMessageDecoder.class), hence violating locking.",
      "range": {
        "startLine": 40,
        "startChar": 17,
        "endLine": 40,
        "endChar": 30
      },
      "revId": "c3ddbcaab90233107b45f96aaee87f84aab4247d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa57193c_533157eb",
        "filename": "bgp/rib-impl/src/main/java/org/opendaylight/protocol/bgp/rib/impl/BGPByteToMessageDecoder.java",
        "patchSetId": 12
      },
      "lineNbr": 52,
      "author": {
        "id": 649
      },
      "writtenOn": "2016-05-03T08:54:42Z",
      "side": 1,
      "message": "unsynchronized access to constraints (note @GuardedBy).",
      "revId": "c3ddbcaab90233107b45f96aaee87f84aab4247d",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}